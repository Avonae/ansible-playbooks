---
- name: Download and install Neovim
  when: not ansible_check_mode
  tags: install_nvim

  block:
    - name: Download Neovim
      ansible.builtin.get_url:
        url: https://github.com/neovim/neovim/releases/latest/download/nvim-linux-x86_64.tar.gz
        dest: /tmp/nvim-linux-x86_64.tar.gz
        mode: "0600"
      tags: install_nvim

    - name: Remove existing Neovim installation
      ansible.builtin.file:
        path: /opt/nvim
        state: absent
      become: true
      tags: install_nvim

    - name: Extract Neovim to /opt
      ansible.builtin.unarchive:
        src: /tmp/nvim-linux-x86_64.tar.gz
        dest: /opt
        remote_src: true
      become: true
      tags: install_nvim

- name: Add Neovim to PATH and configure aliases in .bashrc
  ansible.builtin.blockinfile:
    path: ~/.bashrc
    insertafter: EOF
    block: |
      # Custom bash configurations
      export HISTTIMEFORMAT="%d/%m/%y %T "
      alias ls='ls --color=auto'
      alias ll='ls -alF'
      alias vim='nvim'
      export PATH="$PATH:/opt/nvim-linux-x86_64/bin"
  when: not ansible_check_mode
  tags: setup_bashrc

- name: Read generated password from temporary file
  ansible.builtin.slurp:
    src: /home/{{ server_user }}/.ansible/tmp/user_password.txt
  register: password_content
  when: not ansible_check_mode

- name: Ensure password file exists
  ansible.builtin.stat:
    path: /home/{{ server_user }}/.ansible/tmp/user_password.txt
  register: password_file

- name: Remove temporary password file for user
  ansible.builtin.file:
    path: /home/{{ server_user }}/.ansible/tmp/user_password.txt
    state: absent
  when: password_file.stat.exists
  tags: cleanup
