---
- name: Configure secure SSH with RSA keys and without password login
  hosts: all
  become: true
  vars:
    generated_ssh_port: 2222  # Specify the desired SSH port
  tasks:

    - name: Ensure SSH config directory exists
      ansible.builtin.file:
        path: /etc/ssh/sshd_config.d
        state: directory
        mode: "0755"

    - name: Move SSH settings to a separate config file
      ansible.builtin.copy:
        dest: /etc/ssh/sshd_config.d/10-ssh-config.conf
        content: |
          PubkeyAuthentication yes
          Port {{ generated_ssh_port }}
          PermitRootLogin no
          UsePAM no
          PasswordAuthentication no
        owner: root
        group: root
        mode: "0644"

    - name: Check ownership of home directory
      ansible.builtin.stat:
        path: /home/{{ server_user }}
      register: home_dir_info

    - name: Fail if home directory ownership is incorrect
      ansible.builtin.fail:
        msg: "The home directory '/home/{{ server_user }}' is not owned by '{{ server_user }}'. Please check the ownership."
      when:
        - not ansible_check_mode
        - home_dir_info.stat.pw_name != server_user

    - name: Adding RSA key to ~/.ssh/config file for IP address
      ansible.builtin.blockinfile:
        path: "{{ lookup('env', 'HOME') }}/.ssh/config"
        create: true
        block: |
          Host {{ inventory_hostname }}
             HostName {{ inventory_hostname }}
             User {{ server_user }}
             Port {{ generated_ssh_port }}
             IdentityFile ~/.ssh/id_rsa_{{ inventory_hostname }}
             IdentitiesOnly yes
        marker: "# {mark} Ansible managed block for {{ inventory_hostname }}"
        mode: "0600"
      tags: setup_ssh
      connection: local

    - name: Adding RSA key to ~/.ssh/config file for domain name
      ansible.builtin.blockinfile:
        path: "{{ lookup('env', 'HOME') }}/.ssh/config"
        create: true
        block: |
          Host {{ domain_name }}
             HostName {{ domain_name }}
             User {{ server_user }}
             Port {{ generated_ssh_port }}
             IdentityFile ~/.ssh/id_rsa_{{ domain_name }}
             IdentitiesOnly yes
        marker: "# {mark} Ansible managed block for {{ domain_name }}"
        mode: "0600"
      when: domain_name is defined and domain_name | length > 0
      tags: setup_ssh
      connection: local
    
    - name: Disable and stop ssh.socket
      ansible.builtin.systemd:
        name: ssh.socket
        enabled: false
        state: stopped

    - name: Remove temporary SSH socket configuration files
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      loop:
        - /etc/systemd/system/ssh.service.d/00-socket.conf
        - /etc/systemd/system/ssh.socket.d/addresses.conf

    - name: Reload systemd daemon
      ansible.builtin.systemd:
        daemon_reload: true

    - name: Ensure new SSH port is open in UFW
      community.general.ufw:
        rule: allow
        port: "{{ generated_ssh_port }}"
        proto: tcp
      when: not ansible_check_mode

    - name: Restart SSH to apply new configuration
      ansible.builtin.systemd:
        name: ssh
        state: restarted
        enabled: true

    - name: Display current SSH port
      ansible.builtin.debug:
        msg: "The current SSH port is set to {{ generated_ssh_port }}"

    - name: Ensure SSH is accessible on the new port
      ansible.builtin.wait_for:
        port: "{{ generated_ssh_port }}"
        delay: 5
        timeout: 30

    - name: Confirm successful SSH connection
      ansible.builtin.debug:
        msg: "SSH connection on port {{ generated_ssh_port }} is successful."

  rescue:
    - name: Remove SSH custom config file if setup fails
      ansible.builtin.file:
        path: /etc/ssh/sshd_config.d/10-ssh-config.conf
        state: absent

    - name: Restart SSH to apply rollback
      ansible.builtin.systemd:
        name: ssh
        state: restarted
