---
- name: Ensure SSH config directory exists
  ansible.builtin.file:
    path: /etc/ssh/sshd_config.d
    state: directory
    mode: "0755"

- name: Move SSH settings to a separate config file
  ansible.builtin.copy:
    dest: /etc/ssh/sshd_config.d/10-ssh-config.conf
    content: |
      PubkeyAuthentication yes
      Port {{ generated_ssh_port }}
      PermitRootLogin no
      UsePAM no
      PasswordAuthentication no
    owner: root
    group: root
    mode: "0644"

- name: Check ownership of home directory
  ansible.builtin.stat:
    path: /home/{{ server_user }}
  register: home_dir_info

- name: Fail if home directory ownership is incorrect
  ansible.builtin.fail:
    msg: "The home directory '/home/{{ server_user }}' is not owned by '{{ server_user }}'. Please check the ownership."
  when:
    - not ansible_check_mode
    - home_dir_info.stat.pw_name != server_user

- name: Generate SSH key
  community.crypto.openssh_keypair:
    path: ~/.ssh/id_rsa_{{ ansible_host }}
    state: present
    type: rsa
    size: 2048
  delegate_to: localhost
  connection: local
  become: false
  when: not ansible_check_mode

- name: Generate SSH key for domain
  community.crypto.openssh_keypair:
    path: "~/.ssh/id_rsa_{{ inventory_hostname if inventory_hostname != ansible_host else domain_name }}"
    state: present
    type: rsa
    size: 2048
  delegate_to: localhost
  connection: local
  become: false
  when:
    - not ansible_check_mode
    - (inventory_hostname != ansible_host) or (domain_name is defined and domain_name | length > 0)

- name: Add public keys to authorized_keys
  ansible.posix.authorized_key:
    user: "{{ server_user }}"
    state: present
    key: "{{ item }}"
    path: "/home/{{ server_user }}/.ssh/authorized_keys"
    manage_dir: true
  loop:
    - "{{ lookup('file', '~/.ssh/id_rsa_{{ ansible_host }}.pub') }}"
    - "{{ lookup('file', '~/.ssh/id_rsa_{{ domain_name }}.pub') if domain_name is defined and domain_name | length > 0 else '' }}"
  when: not ansible_check_mode
  become: false
  failed_when: false

- name: Set file permissions to 600
  ansible.builtin.file:
    path: /home/{{ server_user }}/.ssh/authorized_keys
    mode: "0600"
  when: not ansible_check_mode

- name: Adding RSA key to ~/.ssh/config file for IP address
  ansible.builtin.blockinfile:
    path: "~/.ssh/config"
    create: true
    block: |
      Host {{ ansible_host }}
         HostName {{ ansible_host }}
         User {{ server_user }}
         Port {{ generated_ssh_port }}
         IdentityFile ~/.ssh/id_rsa_{{ ansible_host }}
         IdentitiesOnly yes
    marker: "# {mark} Ansible managed block for {{ ansible_host }}"
    mode: "0600"
  tags: setup_ssh
  connection: local
  become: false

- name: Adding RSA key to ~/.ssh/config file for domain name
  ansible.builtin.blockinfile:
    path: "~/.ssh/config"
    create: true
    block: |
      Host {{ inventory_hostname if inventory_hostname != ansible_host else domain_name }}
         HostName {{ inventory_hostname if inventory_hostname != ansible_host else domain_name }}
         User {{ server_user }}
         Port {{ generated_ssh_port }}
         IdentityFile ~/.ssh/id_rsa_{{ inventory_hostname if inventory_hostname != ansible_host else domain_name }}
         IdentitiesOnly yes
    marker: "# {mark} Ansible managed block for {{ inventory_hostname if inventory_hostname != ansible_host else domain_name }}"
    mode: "0600"
  when: (inventory_hostname != ansible_host) or (domain_name is defined and domain_name | length > 0)
  tags: setup_ssh
  connection: local
  become: false

- name: Disable and stop ssh.socket
  ansible.builtin.systemd:
    name: ssh.socket
    enabled: false
    state: stopped

- name: Remove temporary SSH socket configuration files
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop:
    - /etc/systemd/system/ssh.service.d/00-socket.conf
    - /etc/systemd/system/ssh.socket.d/addresses.conf

- name: Reload systemd daemon
  ansible.builtin.systemd:
    daemon_reload: true

- name: Ensure new SSH port is open in UFW
  community.general.ufw:
    rule: allow
    port: "{{ generated_ssh_port }}"
    proto: tcp
  when: not ansible_check_mode

- name: Restart SSH to apply new configuration
  ansible.builtin.systemd:
    name: ssh
    state: restarted
    enabled: true

- name: Display current SSH port
  ansible.builtin.debug:
    msg: "The current SSH port is set to {{ generated_ssh_port }}"

- name: Ensure SSH is accessible on the new port
  ansible.builtin.wait_for:
    port: "{{ generated_ssh_port }}"
    delay: 5
    timeout: 30

- name: Confirm successful SSH connection
  ansible.builtin.debug:
    msg: "SSH connection on port {{ generated_ssh_port }} is successful."
